// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseManagementSystem.Data.Contexts;

#nullable disable

namespace WarehouseManagementSystem.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20250601191530_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Core.BusinessPartner", b =>
                {
                    b.Property<int>("PartnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PartnerID");

                    b.ToTable("BusinessPartners", null, t =>
                        {
                            t.HasCheckConstraint("CK_BusinessPartner_Type", "[Type] IN (0, 1)");
                        });
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Core.Item", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UnitOfMeasurement")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ItemCode");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Core.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("WarehouseID");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Inventory.InventoryItem", b =>
                {
                    b.Property<int>("WarehouseID")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("WarehouseID", "ItemCode", "ProductionDate");

                    b.HasIndex("ItemCode");

                    b.ToTable("InventoryItems", null, t =>
                        {
                            t.HasCheckConstraint("CK_InventoryRecord_Quantity", "[Quantity] >= 0");

                            t.HasCheckConstraint("CK_Inventory_ExpiryDate", "[ExpiryDate] > [ProductionDate]");
                        });
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.Permission", b =>
                {
                    b.Property<string>("PermissionNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MainWarehouseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("date");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("PermissionNumber");

                    b.HasIndex("MainWarehouseID");

                    b.HasIndex("PermissionDate");

                    b.ToTable("Permissions", null, t =>
                        {
                            t.HasCheckConstraint("CK_Permission_Type", "[Type] IN (0, 1, 2)");
                        });
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.PermissionItem", b =>
                {
                    b.Property<int>("PermItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermItemID"));

                    b.Property<int>("ExpiryDuration")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PermissionNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PermItemID");

                    b.HasIndex("ItemCode");

                    b.HasIndex("PermissionNumber");

                    b.ToTable("_currPermItems", null, t =>
                        {
                            t.HasCheckConstraint("CK_PermissionItem_Quantity", "[Quantity] > 0");
                        });
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.ReleasePermission", b =>
                {
                    b.Property<string>("PermissionNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.HasKey("PermissionNumber");

                    b.HasIndex("CustomerID");

                    b.ToTable("ReleasePermissions", (string)null);
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.SupplyPermission", b =>
                {
                    b.Property<string>("PermissionNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("PermissionNumber");

                    b.HasIndex("SupplierID");

                    b.ToTable("SupplyPermissions", (string)null);
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.TransferPermission", b =>
                {
                    b.Property<string>("PermissionNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DestWarehouseID")
                        .HasColumnType("int");

                    b.HasKey("PermissionNumber");

                    b.HasIndex("DestWarehouseID");

                    b.ToTable("TransferPermissions", (string)null);
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Inventory.InventoryItem", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.Item", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.Warehouse", "Warehouse")
                        .WithMany("Inventories")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.Permission", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.Warehouse", "MainWarehouse")
                        .WithMany("Permissions")
                        .HasForeignKey("MainWarehouseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MainWarehouse");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.PermissionItem", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.Item", "Item")
                        .WithMany("_currPermItems")
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Entities.Permissions.Permission", "Permission")
                        .WithMany("_currPermItems")
                        .HasForeignKey("PermissionNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.ReleasePermission", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.BusinessPartner", "Customer")
                        .WithMany("ReleasePermissions")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Entities.Permissions.Permission", "Permission")
                        .WithOne("ReleasePermission")
                        .HasForeignKey("WarehouseManagementSystem.Data.Entities.Permissions.ReleasePermission", "PermissionNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.SupplyPermission", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Entities.Permissions.Permission", "Permission")
                        .WithOne("SupplyPermission")
                        .HasForeignKey("WarehouseManagementSystem.Data.Entities.Permissions.SupplyPermission", "PermissionNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.BusinessPartner", "Supplier")
                        .WithMany("SupplyPermissions")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.TransferPermission", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Entities.Core.Warehouse", "DestWarehouse")
                        .WithMany("Transfers")
                        .HasForeignKey("DestWarehouseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Entities.Permissions.Permission", "Permission")
                        .WithOne("TransferPermission")
                        .HasForeignKey("WarehouseManagementSystem.Data.Entities.Permissions.TransferPermission", "PermissionNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestWarehouse");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Core.BusinessPartner", b =>
                {
                    b.Navigation("ReleasePermissions");

                    b.Navigation("SupplyPermissions");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Core.Item", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("_currPermItems");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Core.Warehouse", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Permissions");

                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Entities.Permissions.Permission", b =>
                {
                    b.Navigation("_currPermItems");

                    b.Navigation("ReleasePermission");

                    b.Navigation("SupplyPermission");

                    b.Navigation("TransferPermission");
                });
#pragma warning restore 612, 618
        }
    }
}
